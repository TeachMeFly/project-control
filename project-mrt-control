#!/bin/bash

CONF_FILE=".project-mrt-control.conf"
PGID_FILE=".project.pgid"
STDERR="stderr.log"
STDOUT="stdout.log"

if [[ ! -e ${CONF_FILE} ]]; then
    echo "'${CONF_FILE}' config file not found"
    exit 4
fi
source ${CONF_FILE}
if [[ $(declare -f run_command > /dev/null; echo $?) != '0' ]]; then
    echo "'${CONF_FILE}' must have 'run_command()' function"
    exit 4
fi
if [[ -z "${PGID}" && -e "${PGID_FILE}" ]]; then
    PGID=$(cat ${PGID_FILE})
fi

usage() {
    echo "Usage: some usage info"
}

start() {
    if [[ -z ${PGID} ]]; then
        if [[ -e "${PGID_FILE}" ]]; then
            rm ${PGID_FILE}
        fi

        run_command;

        echo $$ > ${PGID_FILE}
        echo "Project started, PGID=$$"
    else
        echo "Project already running, PGID=${PGID}"
    fi
}

status() {
    if [[ -z "${PGID}" ]]; then
        echo "Project is not running (missing PGID)"
    elif [[ -n "$(ps -e -o pgid,pid= | grep ${PGID})" ]]; then
        PIDS=""
        IFS=$'\n'
        for pid in $(ps -e -o pgid,pid= | grep ${PGID}); do
            PIDS="$(echo $pid | awk -F ' ' '{print $2}') $PIDS"
        done
        unset IFS
        echo  "Project running PGID=${PGID}, PIDs: $PIDS"
    else
        echo "Project is not running (tested PGID: ${PGID})"
    fi
}

stop() {
    if [[ -z "${PGID}" ]]; then
        echo "Project is not running (missing PGID)"
    elif [[ -n "$(ps -e -o pgid,pid= | grep ${PGID})" ]]; then
        PIDS=""
        IFS=$'\n'
        for pid in $(ps -e -o pgid,pid= | grep ${PGID}); do
            PIDS="$(echo $pid | awk -F ' ' '{print $2}') $PIDS"
        done
        unset IFS
        kill -2 ${PIDS}
        echo "Sending SIGNINT to all childs. Project stopped"
        if [[ -e "${PGID_FILE}" ]]; then
            rm ${PGID_FILE}
        fi
    else
        echo "Project is not running (tested PGID: ${PGID})"
        if [[ -e "${PGID_FILE}" ]]; then
            rm ${PGID_FILE}
        fi
    fi
}

case $1 in
    start)
        start;
        ;;
    stop)
        stop;
        ;;
    status)
        status;
        ;;
    *)
        usage;
        exit 4
        ;;
esac
